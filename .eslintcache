[{"G:\\Coursera\\React\\confusion\\src\\index.js":"1","G:\\Coursera\\React\\confusion\\src\\App.js":"2","G:\\Coursera\\React\\confusion\\src\\reportWebVitals.js":"3","G:\\Coursera\\React\\confusion\\src\\components\\MenuComponent.js":"4","G:\\Coursera\\React\\confusion\\src\\shared\\dishes.js":"5","G:\\Coursera\\React\\confusion\\src\\components\\DishDetails.js":"6","G:\\Coursera\\React\\confusion\\src\\components\\MainComponent.js":"7","G:\\Coursera\\React\\confusion\\src\\components\\HeaderComponent.js":"8","G:\\Coursera\\React\\confusion\\src\\components\\FooterComponent.js":"9","G:\\Coursera\\React\\confusion\\src\\components\\HomeComponent.js":"10","G:\\Coursera\\React\\confusion\\src\\components\\ContactComponent.js":"11","G:\\Coursera\\React\\confusion\\src\\shared\\promotions.js":"12","G:\\Coursera\\React\\confusion\\src\\shared\\leaders.js":"13","G:\\Coursera\\React\\confusion\\src\\shared\\comments.js":"14","G:\\Coursera\\React\\confusion\\src\\components\\AboutComponent.js":"15","G:\\Coursera\\React\\confusion\\src\\redux\\configureStore.js":"16","G:\\Coursera\\React\\confusion\\src\\components\\CommentFormComponent.js":"17","G:\\Coursera\\React\\confusion\\src\\redux\\dishes.js":"18","G:\\Coursera\\React\\confusion\\src\\redux\\comments.js":"19","G:\\Coursera\\React\\confusion\\src\\redux\\leaders.js":"20","G:\\Coursera\\React\\confusion\\src\\redux\\promotions.js":"21"},{"size":639,"mtime":1617821400764,"results":"22","hashOfConfig":"23"},{"size":579,"mtime":1618050528378,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":1477,"mtime":1617902514942,"results":"26","hashOfConfig":"23"},{"size":1490,"mtime":1617897749185,"results":"27","hashOfConfig":"23"},{"size":3161,"mtime":1618080520116,"results":"28","hashOfConfig":"23"},{"size":1999,"mtime":1618050463526,"results":"29","hashOfConfig":"23"},{"size":5081,"mtime":1618042269556,"results":"30","hashOfConfig":"23"},{"size":2639,"mtime":1617825000013,"results":"31","hashOfConfig":"23"},{"size":1112,"mtime":1617898960282,"results":"32","hashOfConfig":"23"},{"size":10951,"mtime":1618072884020,"results":"33","hashOfConfig":"23"},{"size":445,"mtime":1617897851421,"results":"34","hashOfConfig":"23"},{"size":2382,"mtime":1617897887228,"results":"35","hashOfConfig":"23"},{"size":4280,"mtime":1617897807809,"results":"36","hashOfConfig":"23"},{"size":4320,"mtime":1617990838288,"results":"37","hashOfConfig":"23"},{"size":493,"mtime":1618245041287,"results":"38","hashOfConfig":"23"},{"size":4679,"mtime":1618080432040,"results":"39","hashOfConfig":"23"},{"size":181,"mtime":1618245050844,"results":"40","hashOfConfig":"23"},{"size":193,"mtime":1618245052766,"results":"41","hashOfConfig":"23"},{"size":187,"mtime":1618245056371,"results":"42","hashOfConfig":"23"},{"size":199,"mtime":1618245054582,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"hfegs1",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\Coursera\\React\\confusion\\src\\index.js",[],["90","91"],"G:\\Coursera\\React\\confusion\\src\\App.js",[],"G:\\Coursera\\React\\confusion\\src\\reportWebVitals.js",[],"G:\\Coursera\\React\\confusion\\src\\components\\MenuComponent.js",[],"G:\\Coursera\\React\\confusion\\src\\shared\\dishes.js",[],"G:\\Coursera\\React\\confusion\\src\\components\\DishDetails.js",[],"G:\\Coursera\\React\\confusion\\src\\components\\MainComponent.js",["92"],"\r\nimport {Component} from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport DishDetails from './DishDetails';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\n\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n\r\n    const HomePage = () => {\r\n      return(\r\n        <Home \r\n        dish={this.props.dishes.filter((dish) => dish.featured)[0]}\r\n        promotion={this.props.promotions.filter((promo) => promo.featured)[0]}\r\n        leader={this.props.leaders.filter((leader) => leader.featured)[0]}\r\n    />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n          <DishDetails dish={this.props.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]} \r\n            comments={this.props.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))} />\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div >\r\n        <Header />\r\n        <Switch>\r\n              <Route path='/home' component={HomePage} />\r\n              <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n              <Route path='/menu/:dishId' component={DishWithId} />\r\n              <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders}/>} />\r\n              <Route exact path='/contactus' component={Contact} />\r\n              <Redirect to=\"/home\" />\r\n          </Switch>\r\n        \r\n        <Footer />\r\n      </div>\r\n    );\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Main));\r\n","G:\\Coursera\\React\\confusion\\src\\components\\HeaderComponent.js",[],"G:\\Coursera\\React\\confusion\\src\\components\\FooterComponent.js",[],"G:\\Coursera\\React\\confusion\\src\\components\\HomeComponent.js",[],"G:\\Coursera\\React\\confusion\\src\\components\\ContactComponent.js",["93","94","95","96","97","98","99","100"],"import React,{Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button,  Label, Col, Row} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        // event.preventDefault();\r\n    }\r\n\r\n    render(){\r\n\r\n       \r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\" \r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </div>\r\n               </div>\r\n\r\n            </div>\r\n        );\r\n\r\n    }\r\n   \r\n}\r\n\r\nexport default Contact;","G:\\Coursera\\React\\confusion\\src\\shared\\promotions.js",[],"G:\\Coursera\\React\\confusion\\src\\shared\\leaders.js",[],"G:\\Coursera\\React\\confusion\\src\\shared\\comments.js",[],"G:\\Coursera\\React\\confusion\\src\\components\\AboutComponent.js",[],"G:\\Coursera\\React\\confusion\\src\\redux\\configureStore.js",[],"G:\\Coursera\\React\\confusion\\src\\components\\CommentFormComponent.js",["101","102","103"],"import React, { Component } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, Col, Row, Label} from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentFormComponent  extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        \r\n        this.state = {\r\n          isModalOpen: false\r\n        };\r\n\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n\r\n      toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n\r\n      handleSubmit(values) {\r\n\r\n        this.toggleModal();\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        // event.preventDefault();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n\r\n            <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span> Submit Comment </Button>\r\n\r\n\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n            <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n            <ModalBody>\r\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={12} >Rating</Label>\r\n                                  \r\n                                <Col md={12}>\r\n                                    <Control.select model=\".rating\" name=\"rating\"\r\n                                        className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"yourname\" md={12} >Your Name</Label>\r\n                                <Col md={12}>\r\n                                    <Control.text model=\".yourname\" id=\"yourname\" name=\"yourname\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".yourname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={2}>Comment</Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n\r\n            </LocalForm>\r\n            \r\n            </ModalBody>\r\n        </Modal>\r\n\r\n        </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CommentFormComponent;\r\n","G:\\Coursera\\React\\confusion\\src\\redux\\dishes.js",[],"G:\\Coursera\\React\\confusion\\src\\redux\\comments.js",[],"G:\\Coursera\\React\\confusion\\src\\redux\\leaders.js",[],"G:\\Coursera\\React\\confusion\\src\\redux\\promotions.js",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":25,"column":3,"nodeType":"110","messageId":"111","endLine":28,"endColumn":4},{"ruleId":"112","severity":1,"message":"113","line":66,"column":29,"nodeType":"114","endLine":66,"endColumn":71},{"ruleId":"115","severity":1,"message":"116","line":81,"column":37,"nodeType":"114","endLine":87,"endColumn":44},{"ruleId":"115","severity":1,"message":"116","line":103,"column":37,"nodeType":"114","endLine":109,"endColumn":44},{"ruleId":"115","severity":1,"message":"116","line":125,"column":37,"nodeType":"114","endLine":131,"endColumn":44},{"ruleId":"115","severity":1,"message":"116","line":148,"column":37,"nodeType":"114","endLine":154,"endColumn":44},{"ruleId":"115","severity":1,"message":"117","line":170,"column":45,"nodeType":"114","endLine":172,"endColumn":52},{"ruleId":"115","severity":1,"message":"118","line":178,"column":37,"nodeType":"114","endLine":179,"endColumn":66},{"ruleId":"115","severity":1,"message":"119","line":188,"column":37,"nodeType":"114","endLine":190,"endColumn":68},{"ruleId":"115","severity":1,"message":"118","line":55,"column":37,"nodeType":"114","endLine":56,"endColumn":66},{"ruleId":"115","severity":1,"message":"116","line":69,"column":37,"nodeType":"114","endLine":75,"endColumn":44},{"ruleId":"115","severity":1,"message":"119","line":91,"column":37,"nodeType":"114","endLine":93,"endColumn":68},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]