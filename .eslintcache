[{"G:\\Coursera\\React\\confusion\\src\\index.js":"1","G:\\Coursera\\React\\confusion\\src\\App.js":"2","G:\\Coursera\\React\\confusion\\src\\reportWebVitals.js":"3","G:\\Coursera\\React\\confusion\\src\\components\\MenuComponent.js":"4","G:\\Coursera\\React\\confusion\\src\\shared\\dishes.js":"5","G:\\Coursera\\React\\confusion\\src\\components\\DishDetails.js":"6","G:\\Coursera\\React\\confusion\\src\\components\\MainComponent.js":"7","G:\\Coursera\\React\\confusion\\src\\components\\HeaderComponent.js":"8","G:\\Coursera\\React\\confusion\\src\\components\\FooterComponent.js":"9","G:\\Coursera\\React\\confusion\\src\\components\\HomeComponent.js":"10","G:\\Coursera\\React\\confusion\\src\\components\\ContactComponent.js":"11","G:\\Coursera\\React\\confusion\\src\\shared\\promotions.js":"12","G:\\Coursera\\React\\confusion\\src\\shared\\leaders.js":"13","G:\\Coursera\\React\\confusion\\src\\shared\\comments.js":"14","G:\\Coursera\\React\\confusion\\src\\components\\AboutComponent.js":"15","G:\\Coursera\\React\\confusion\\src\\redux\\configureStore.js":"16","G:\\Coursera\\React\\confusion\\src\\components\\CommentFormComponent.js":"17","G:\\Coursera\\React\\confusion\\src\\redux\\dishes.js":"18","G:\\Coursera\\React\\confusion\\src\\redux\\comments.js":"19","G:\\Coursera\\React\\confusion\\src\\redux\\leaders.js":"20","G:\\Coursera\\React\\confusion\\src\\redux\\promotions.js":"21","G:\\Coursera\\React\\confusion\\src\\redux\\ActionCreators.js":"22","G:\\Coursera\\React\\confusion\\src\\redux\\ActionTypes.js":"23","G:\\Coursera\\React\\confusion\\src\\components\\LoadingComponent.js":"24","G:\\Coursera\\React\\confusion\\src\\redux\\forms.js":"25","G:\\Coursera\\React\\confusion\\src\\shared\\baseUrl.js":"26"},{"size":639,"mtime":1617821400764,"results":"27","hashOfConfig":"28"},{"size":579,"mtime":1618050528378,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"28"},{"size":2329,"mtime":1618337454537,"results":"31","hashOfConfig":"28"},{"size":1490,"mtime":1617897749185,"results":"32","hashOfConfig":"28"},{"size":3854,"mtime":1618337454488,"results":"33","hashOfConfig":"28"},{"size":3200,"mtime":1618337454537,"results":"34","hashOfConfig":"28"},{"size":5081,"mtime":1618042269556,"results":"35","hashOfConfig":"28"},{"size":2639,"mtime":1617825000013,"results":"36","hashOfConfig":"28"},{"size":1601,"mtime":1618337454488,"results":"37","hashOfConfig":"28"},{"size":11004,"mtime":1618305405287,"results":"38","hashOfConfig":"28"},{"size":445,"mtime":1617897851421,"results":"39","hashOfConfig":"28"},{"size":2382,"mtime":1617897887228,"results":"40","hashOfConfig":"28"},{"size":4280,"mtime":1617897807809,"results":"41","hashOfConfig":"28"},{"size":4320,"mtime":1617990838288,"results":"42","hashOfConfig":"28"},{"size":806,"mtime":1618305423642,"results":"43","hashOfConfig":"28"},{"size":4604,"mtime":1618248320980,"results":"44","hashOfConfig":"28"},{"size":598,"mtime":1618256958085,"results":"45","hashOfConfig":"28"},{"size":700,"mtime":1618337454418,"results":"46","hashOfConfig":"28"},{"size":187,"mtime":1618245056371,"results":"47","hashOfConfig":"28"},{"size":618,"mtime":1618337454418,"results":"48","hashOfConfig":"28"},{"size":3178,"mtime":1618395789605,"results":"49","hashOfConfig":"28"},{"size":415,"mtime":1618337454418,"results":"50","hashOfConfig":"28"},{"size":256,"mtime":1618256956253,"results":"51","hashOfConfig":"28"},{"size":170,"mtime":1618305417532,"results":"52","hashOfConfig":"28"},{"size":48,"mtime":1618337454420,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"hfegs1",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"G:\\Coursera\\React\\confusion\\src\\index.js",[],["111","112"],"G:\\Coursera\\React\\confusion\\src\\App.js",[],"G:\\Coursera\\React\\confusion\\src\\reportWebVitals.js",[],"G:\\Coursera\\React\\confusion\\src\\components\\MenuComponent.js",[],"G:\\Coursera\\React\\confusion\\src\\shared\\dishes.js",[],"G:\\Coursera\\React\\confusion\\src\\components\\DishDetails.js",[],"G:\\Coursera\\React\\confusion\\src\\components\\MainComponent.js",["113"],"\r\nimport {Component} from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport DishDetails from './DishDetails';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\n\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { addComment, fetchDishes, fetchComments, fetchPromos  } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  \r\n  addComment: (dishId, rating, author, comment) => dispatch(addComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => { dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos())\r\n\r\n});\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n\r\n    const HomePage = () => {\r\n      return(\r\n        <Home \r\n        dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n        dishesLoading={this.props.dishes.isLoading}\r\n        dishesErrMess={this.props.dishes.errMess}\r\n\r\n        promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n        promoLoading={this.props.promotions.isLoading}\r\n        promoErrMess={this.props.promotions.errMess}\r\n        leader={this.props.leaders.filter((leader) => leader.featured)[0]}\r\n    />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n          <DishDetails dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]} \r\n            isLoading={this.props.dishes.isLoading}\r\n            errMess={this.props.dishes.errMess}\r\n            comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))} \r\n            commentsErrMess={this.props.comments.errMess}\r\n            addComment={this.props.addComment}\r\n            />\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div >\r\n        <Header />\r\n        <Switch>\r\n              <Route path='/home' component={HomePage} />\r\n              <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n              <Route path='/menu/:dishId' component={DishWithId} />\r\n              <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders}/>} />\r\n              <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} />} />\r\n              <Redirect to=\"/home\" />\r\n          </Switch>\r\n        \r\n        <Footer />\r\n      </div>\r\n    );\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","G:\\Coursera\\React\\confusion\\src\\components\\HeaderComponent.js",[],"G:\\Coursera\\React\\confusion\\src\\components\\FooterComponent.js",[],"G:\\Coursera\\React\\confusion\\src\\components\\HomeComponent.js",[],"G:\\Coursera\\React\\confusion\\src\\components\\ContactComponent.js",["114","115","116","117","118","119","120","121","122"],"import React,{Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button,  Label, Col, Row} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors, actions  } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n        // event.preventDefault();\r\n    }\r\n\r\n    render(){\r\n\r\n       \r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                    <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\" \r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n               </div>\r\n\r\n            </div>\r\n        );\r\n\r\n    }\r\n   \r\n}\r\n\r\nexport default Contact;","G:\\Coursera\\React\\confusion\\src\\shared\\promotions.js",[],["123","124"],"G:\\Coursera\\React\\confusion\\src\\shared\\leaders.js",[],"G:\\Coursera\\React\\confusion\\src\\shared\\comments.js",[],"G:\\Coursera\\React\\confusion\\src\\components\\AboutComponent.js",[],"G:\\Coursera\\React\\confusion\\src\\redux\\configureStore.js",[],"G:\\Coursera\\React\\confusion\\src\\components\\CommentFormComponent.js",["125","126","127"],"import React, { Component } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, Col, Row, Label} from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentFormComponent  extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        \r\n        this.state = {\r\n          isModalOpen: false\r\n        };\r\n\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n\r\n      toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n\r\n      handleSubmit(values) {\r\n\r\n        this.toggleModal();\r\n        this.props.addComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n\r\n            <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span> Submit Comment </Button>\r\n\r\n\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n            <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n            <ModalBody>\r\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={12} >Rating</Label>\r\n                                  \r\n                                <Col md={12}>\r\n                                    <Control.select model=\".rating\" name=\"rating\"\r\n                                        className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"yourname\" md={12} >Your Name</Label>\r\n                                <Col md={12}>\r\n                                    <Control.text model=\".author\" id=\"yourname\" name=\"yourname\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={2}>Comment</Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n\r\n            </LocalForm>\r\n            \r\n            </ModalBody>\r\n        </Modal>\r\n\r\n        </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CommentFormComponent;\r\n","G:\\Coursera\\React\\confusion\\src\\redux\\dishes.js",[],"G:\\Coursera\\React\\confusion\\src\\redux\\comments.js",[],"G:\\Coursera\\React\\confusion\\src\\redux\\leaders.js",[],"G:\\Coursera\\React\\confusion\\src\\redux\\promotions.js",[],"G:\\Coursera\\React\\confusion\\src\\redux\\ActionCreators.js",["128"],"G:\\Coursera\\React\\confusion\\src\\redux\\ActionTypes.js",[],"G:\\Coursera\\React\\confusion\\src\\components\\LoadingComponent.js",[],"G:\\Coursera\\React\\confusion\\src\\redux\\forms.js",[],"G:\\Coursera\\React\\confusion\\src\\shared\\baseUrl.js",[],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":36,"column":3,"nodeType":"135","messageId":"136","endLine":39,"endColumn":4},{"ruleId":"137","severity":1,"message":"138","line":4,"column":33,"nodeType":"139","messageId":"140","endLine":4,"endColumn":40},{"ruleId":"141","severity":1,"message":"142","line":67,"column":29,"nodeType":"143","endLine":67,"endColumn":71},{"ruleId":"144","severity":1,"message":"145","line":82,"column":37,"nodeType":"143","endLine":88,"endColumn":44},{"ruleId":"144","severity":1,"message":"145","line":104,"column":37,"nodeType":"143","endLine":110,"endColumn":44},{"ruleId":"144","severity":1,"message":"145","line":126,"column":37,"nodeType":"143","endLine":132,"endColumn":44},{"ruleId":"144","severity":1,"message":"145","line":149,"column":37,"nodeType":"143","endLine":155,"endColumn":44},{"ruleId":"144","severity":1,"message":"146","line":171,"column":45,"nodeType":"143","endLine":173,"endColumn":52},{"ruleId":"144","severity":1,"message":"147","line":179,"column":37,"nodeType":"143","endLine":180,"endColumn":66},{"ruleId":"144","severity":1,"message":"148","line":189,"column":37,"nodeType":"143","endLine":191,"endColumn":68},{"ruleId":"129","replacedBy":"149"},{"ruleId":"131","replacedBy":"150"},{"ruleId":"144","severity":1,"message":"147","line":53,"column":37,"nodeType":"143","endLine":54,"endColumn":66},{"ruleId":"144","severity":1,"message":"145","line":67,"column":37,"nodeType":"143","endLine":73,"endColumn":44},{"ruleId":"144","severity":1,"message":"148","line":89,"column":37,"nodeType":"143","endLine":91,"endColumn":68},{"ruleId":"137","severity":1,"message":"151","line":2,"column":10,"nodeType":"139","messageId":"140","endLine":2,"endColumn":16},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'actions' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE",["152"],["153"],"'DISHES' is defined but never used.","no-global-assign","no-unsafe-negation"]